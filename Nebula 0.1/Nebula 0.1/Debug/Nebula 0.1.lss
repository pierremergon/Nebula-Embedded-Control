
Nebula 0.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000057e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000050a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000057e  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  0000057e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000208  00000000  00000000  00000620  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002000  00000000  00000000  00000828  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e1b  00000000  00000000  00002828  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000108f  00000000  00000000  00003643  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004d4  00000000  00000000  000046d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007c2  00000000  00000000  00004ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e0e  00000000  00000000  0000536a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b8  00000000  00000000  00006178  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 b8 01 	jmp	0x370	; 0x370 <__vector_1>
   8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   c:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__vector_3>
  10:	0c 94 e9 01 	jmp	0x3d2	; 0x3d2 <__vector_4>
  14:	0c 94 18 02 	jmp	0x430	; 0x430 <__vector_5>
  18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  2c:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__vector_11>
  30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  70:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  74:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  78:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  7c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  80:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  84:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  88:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  8c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  90:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  94:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  98:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  9c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  ac:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  b0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a2 30       	cpi	r26, 0x02	; 2
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	0e 94 76 02 	call	0x4ec	; 0x4ec <main>
  d4:	0c 94 83 02 	jmp	0x506	; 0x506 <_exit>

000000d8 <__bad_interrupt>:
  d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <apdsTransceive>:
	value=i2c_readNak();
	return value;

}
unsigned char apdsTransceive(void)
{ unsigned char data;
  dc:	cf 93       	push	r28
	i2c_start(nebula_write);
  de:	82 e7       	ldi	r24, 0x72	; 114
  e0:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <i2c_start>
	i2c_write(proxDataReg);
  e4:	8c e9       	ldi	r24, 0x9C	; 156
  e6:	0e 94 9b 01 	call	0x336	; 0x336 <i2c_write>
	//i2c_write(id_reg);
	i2c_start(nebula_read);
  ea:	83 e7       	ldi	r24, 0x73	; 115
  ec:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <i2c_start>
	//data = i2c_readAck();
	data = i2c_readNak();
  f0:	0e 94 ad 01 	call	0x35a	; 0x35a <i2c_readNak>
  f4:	c8 2f       	mov	r28, r24
	return 0;
	
}
unsigned char apdsStop(void)
{
	i2c_stop();
  f6:	0e 94 92 01 	call	0x324	; 0x324 <i2c_stop>
	//i2c_write(id_reg);
	i2c_start(nebula_read);
	//data = i2c_readAck();
	data = i2c_readNak();
	apdsStop();
	i2c_start(nebula_write);
  fa:	82 e7       	ldi	r24, 0x72	; 114
  fc:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <i2c_start>
	i2c_write(0xE5);
 100:	85 ee       	ldi	r24, 0xE5	; 229
 102:	0e 94 9b 01 	call	0x336	; 0x336 <i2c_write>
	return 0;
	
}
unsigned char apdsStop(void)
{
	i2c_stop();
 106:	0e 94 92 01 	call	0x324	; 0x324 <i2c_stop>
	i2c_start(nebula_write);
	i2c_write(0xE5);
	apdsStop();

	
	if (data == 0xFF)//A0
 10a:	cf 3f       	cpi	r28, 0xFF	; 255
 10c:	11 f4       	brne	.+4      	; 0x112 <apdsTransceive+0x36>
	{
		flashy();
 10e:	0e 94 b7 00 	call	0x16e	; 0x16e <flashy>
	i2c_write(0xE5);
	apdsStop();*/
	//sleep_mode();
	return 0;
	
}
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	cf 91       	pop	r28
 116:	08 95       	ret

00000118 <unUsed>:
unsigned char drvPhase_En(void)
{
	PORTE |= (1<<drvSleep);
	PORTE |= (1<<drvMode);
	return 0;
}
 118:	21 98       	cbi	0x04, 1	; 4
 11a:	8a b1       	in	r24, 0x0a	; 10
 11c:	8d b1       	in	r24, 0x0d	; 13
 11e:	29 9a       	sbi	0x05, 1	; 5
 120:	5c 9a       	sbi	0x0b, 4	; 11
 122:	70 9a       	sbi	0x0e, 0	; 14
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	08 95       	ret

00000128 <portSetup>:
 128:	0e 94 8c 00 	call	0x118	; 0x118 <unUsed>
 12c:	55 9a       	sbi	0x0a, 5	; 10
 12e:	57 9a       	sbi	0x0a, 7	; 10
 130:	56 9a       	sbi	0x0a, 6	; 10
 132:	5d 9a       	sbi	0x0b, 5	; 11
 134:	5f 9a       	sbi	0x0b, 7	; 11
 136:	5e 9a       	sbi	0x0b, 6	; 11
 138:	84 b1       	in	r24, 0x04	; 4
 13a:	8a 7f       	andi	r24, 0xFA	; 250
 13c:	84 b9       	out	0x04, r24	; 4
 13e:	85 b1       	in	r24, 0x05	; 5
 140:	85 60       	ori	r24, 0x05	; 5
 142:	85 b9       	out	0x05, r24	; 5
 144:	3a 98       	cbi	0x07, 2	; 7
 146:	42 9a       	sbi	0x08, 2	; 8
 148:	80 e0       	ldi	r24, 0x00	; 0
 14a:	08 95       	ret

0000014c <boostEnable>:
 14c:	6a 9a       	sbi	0x0d, 2	; 13
 14e:	72 9a       	sbi	0x0e, 2	; 14
 150:	80 e0       	ldi	r24, 0x00	; 0
 152:	08 95       	ret

00000154 <solOn>:
 154:	73 9a       	sbi	0x0e, 3	; 14
 156:	41 9a       	sbi	0x08, 1	; 8
 158:	83 ec       	ldi	r24, 0xC3	; 195
 15a:	99 e0       	ldi	r25, 0x09	; 9
 15c:	01 97       	sbiw	r24, 0x01	; 1
 15e:	f1 f7       	brne	.-4      	; 0x15c <solOn+0x8>
 160:	00 c0       	rjmp	.+0      	; 0x162 <solOn+0xe>
 162:	00 00       	nop
 164:	41 98       	cbi	0x08, 1	; 8
 166:	40 98       	cbi	0x08, 0	; 8
 168:	73 98       	cbi	0x0e, 3	; 14
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	08 95       	ret

0000016e <flashy>:
 16e:	5d 98       	cbi	0x0b, 5	; 11
 170:	2f ef       	ldi	r18, 0xFF	; 255
 172:	80 e7       	ldi	r24, 0x70	; 112
 174:	92 e0       	ldi	r25, 0x02	; 2
 176:	21 50       	subi	r18, 0x01	; 1
 178:	80 40       	sbci	r24, 0x00	; 0
 17a:	90 40       	sbci	r25, 0x00	; 0
 17c:	e1 f7       	brne	.-8      	; 0x176 <flashy+0x8>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <flashy+0x12>
 180:	00 00       	nop
 182:	5d 9a       	sbi	0x0b, 5	; 11
 184:	2f ef       	ldi	r18, 0xFF	; 255
 186:	80 e7       	ldi	r24, 0x70	; 112
 188:	92 e0       	ldi	r25, 0x02	; 2
 18a:	21 50       	subi	r18, 0x01	; 1
 18c:	80 40       	sbci	r24, 0x00	; 0
 18e:	90 40       	sbci	r25, 0x00	; 0
 190:	e1 f7       	brne	.-8      	; 0x18a <flashy+0x1c>
 192:	00 c0       	rjmp	.+0      	; 0x194 <flashy+0x26>
 194:	00 00       	nop
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	08 95       	ret

0000019a <batteryLow>:
 19a:	5d 98       	cbi	0x0b, 5	; 11
 19c:	2f e5       	ldi	r18, 0x5F	; 95
 19e:	8a ee       	ldi	r24, 0xEA	; 234
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	21 50       	subi	r18, 0x01	; 1
 1a4:	80 40       	sbci	r24, 0x00	; 0
 1a6:	90 40       	sbci	r25, 0x00	; 0
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <batteryLow+0x8>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <batteryLow+0x12>
 1ac:	00 00       	nop
 1ae:	5d 9a       	sbi	0x0b, 5	; 11
 1b0:	5f 98       	cbi	0x0b, 7	; 11
 1b2:	2f e5       	ldi	r18, 0x5F	; 95
 1b4:	8a ee       	ldi	r24, 0xEA	; 234
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	21 50       	subi	r18, 0x01	; 1
 1ba:	80 40       	sbci	r24, 0x00	; 0
 1bc:	90 40       	sbci	r25, 0x00	; 0
 1be:	e1 f7       	brne	.-8      	; 0x1b8 <batteryLow+0x1e>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <batteryLow+0x28>
 1c2:	00 00       	nop
 1c4:	5f 9a       	sbi	0x0b, 7	; 11
 1c6:	5e 98       	cbi	0x0b, 6	; 11
 1c8:	2f e5       	ldi	r18, 0x5F	; 95
 1ca:	8a ee       	ldi	r24, 0xEA	; 234
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	21 50       	subi	r18, 0x01	; 1
 1d0:	80 40       	sbci	r24, 0x00	; 0
 1d2:	90 40       	sbci	r25, 0x00	; 0
 1d4:	e1 f7       	brne	.-8      	; 0x1ce <batteryLow+0x34>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <batteryLow+0x3e>
 1d8:	00 00       	nop
 1da:	5e 9a       	sbi	0x0b, 6	; 11
 1dc:	8b b1       	in	r24, 0x0b	; 11
 1de:	8f 79       	andi	r24, 0x9F	; 159
 1e0:	8b b9       	out	0x0b, r24	; 11
 1e2:	2f e5       	ldi	r18, 0x5F	; 95
 1e4:	8a ee       	ldi	r24, 0xEA	; 234
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	21 50       	subi	r18, 0x01	; 1
 1ea:	80 40       	sbci	r24, 0x00	; 0
 1ec:	90 40       	sbci	r25, 0x00	; 0
 1ee:	e1 f7       	brne	.-8      	; 0x1e8 <batteryLow+0x4e>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <batteryLow+0x58>
 1f2:	00 00       	nop
 1f4:	8b b1       	in	r24, 0x0b	; 11
 1f6:	80 66       	ori	r24, 0x60	; 96
 1f8:	8b b9       	out	0x0b, r24	; 11
 1fa:	8b b1       	in	r24, 0x0b	; 11
 1fc:	80 72       	andi	r24, 0x20	; 32
 1fe:	8b b9       	out	0x0b, r24	; 11
 200:	2f e5       	ldi	r18, 0x5F	; 95
 202:	8a ee       	ldi	r24, 0xEA	; 234
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	21 50       	subi	r18, 0x01	; 1
 208:	80 40       	sbci	r24, 0x00	; 0
 20a:	90 40       	sbci	r25, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <batteryLow+0x6c>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <batteryLow+0x76>
 210:	00 00       	nop
 212:	8b b1       	in	r24, 0x0b	; 11
 214:	80 6a       	ori	r24, 0xA0	; 160
 216:	8b b9       	out	0x0b, r24	; 11
 218:	8b b1       	in	r24, 0x0b	; 11
 21a:	8f 73       	andi	r24, 0x3F	; 63
 21c:	8b b9       	out	0x0b, r24	; 11
 21e:	2f e5       	ldi	r18, 0x5F	; 95
 220:	8a ee       	ldi	r24, 0xEA	; 234
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	21 50       	subi	r18, 0x01	; 1
 226:	80 40       	sbci	r24, 0x00	; 0
 228:	90 40       	sbci	r25, 0x00	; 0
 22a:	e1 f7       	brne	.-8      	; 0x224 <batteryLow+0x8a>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <batteryLow+0x94>
 22e:	00 00       	nop
 230:	8b b1       	in	r24, 0x0b	; 11
 232:	80 6c       	ori	r24, 0xC0	; 192
 234:	8b b9       	out	0x0b, r24	; 11
 236:	8b b1       	in	r24, 0x0b	; 11
 238:	8f 75       	andi	r24, 0x5F	; 95
 23a:	8b b9       	out	0x0b, r24	; 11
 23c:	2f e5       	ldi	r18, 0x5F	; 95
 23e:	8a ee       	ldi	r24, 0xEA	; 234
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	21 50       	subi	r18, 0x01	; 1
 244:	80 40       	sbci	r24, 0x00	; 0
 246:	90 40       	sbci	r25, 0x00	; 0
 248:	e1 f7       	brne	.-8      	; 0x242 <batteryLow+0xa8>
 24a:	00 c0       	rjmp	.+0      	; 0x24c <batteryLow+0xb2>
 24c:	00 00       	nop
 24e:	8b b1       	in	r24, 0x0b	; 11
 250:	80 6a       	ori	r24, 0xA0	; 160
 252:	8b b9       	out	0x0b, r24	; 11
 254:	80 e0       	ldi	r24, 0x00	; 0
 256:	08 95       	ret

00000258 <drvIN_IN>:
 258:	73 9a       	sbi	0x0e, 3	; 14
 25a:	71 98       	cbi	0x0e, 1	; 14
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	08 95       	ret

00000260 <drvActuate>:

unsigned char drvActuate(unsigned char mode)
{
	if(mode == 1)
 260:	81 30       	cpi	r24, 0x01	; 1
 262:	b9 f5       	brne	.+110    	; 0x2d2 <drvActuate+0x72>
	{   drvIN_IN();
 264:	0e 94 2c 01 	call	0x258	; 0x258 <drvIN_IN>
		for(i = 0; i<20; i++)
 268:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
		{
			PORTB &= ~(1<<drv1A);
 26c:	2e 98       	cbi	0x05, 6	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 26e:	83 ed       	ldi	r24, 0xD3	; 211
 270:	90 e3       	ldi	r25, 0x30	; 48
 272:	01 97       	sbiw	r24, 0x01	; 1
 274:	f1 f7       	brne	.-4      	; 0x272 <drvActuate+0x12>
 276:	00 c0       	rjmp	.+0      	; 0x278 <drvActuate+0x18>
 278:	00 00       	nop
			_delay_ms(50);
			PORTB |= (1<<drv1B);
 27a:	2f 9a       	sbi	0x05, 7	; 5
 27c:	9f e7       	ldi	r25, 0x7F	; 127
 27e:	2a e1       	ldi	r18, 0x1A	; 26
 280:	86 e0       	ldi	r24, 0x06	; 6
 282:	91 50       	subi	r25, 0x01	; 1
 284:	20 40       	sbci	r18, 0x00	; 0
 286:	80 40       	sbci	r24, 0x00	; 0
 288:	e1 f7       	brne	.-8      	; 0x282 <drvActuate+0x22>
 28a:	00 c0       	rjmp	.+0      	; 0x28c <drvActuate+0x2c>
 28c:	00 00       	nop
			_delay_ms(2000);

			PORTB &= ~(1<<drv1B);
 28e:	2f 98       	cbi	0x05, 7	; 5
 290:	83 ed       	ldi	r24, 0xD3	; 211
 292:	90 e3       	ldi	r25, 0x30	; 48
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <drvActuate+0x34>
 298:	00 c0       	rjmp	.+0      	; 0x29a <drvActuate+0x3a>
 29a:	00 00       	nop
			_delay_ms(50);
			PORTB |= (1<<drv1A);
 29c:	2e 9a       	sbi	0x05, 6	; 5
 29e:	9f e7       	ldi	r25, 0x7F	; 127
 2a0:	2a e1       	ldi	r18, 0x1A	; 26
 2a2:	86 e0       	ldi	r24, 0x06	; 6
 2a4:	91 50       	subi	r25, 0x01	; 1
 2a6:	20 40       	sbci	r18, 0x00	; 0
 2a8:	80 40       	sbci	r24, 0x00	; 0
 2aa:	e1 f7       	brne	.-8      	; 0x2a4 <drvActuate+0x44>
 2ac:	00 c0       	rjmp	.+0      	; 0x2ae <drvActuate+0x4e>
 2ae:	00 00       	nop

unsigned char drvActuate(unsigned char mode)
{
	if(mode == 1)
	{   drvIN_IN();
		for(i = 0; i<20; i++)
 2b0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2b4:	8f 5f       	subi	r24, 0xFF	; 255
 2b6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 2ba:	84 31       	cpi	r24, 0x14	; 20
 2bc:	b8 f2       	brcs	.-82     	; 0x26c <drvActuate+0xc>
			PORTB &= ~(1<<drv1B);
			_delay_ms(50);
			PORTB |= (1<<drv1A);
			_delay_ms(2000);
		}
		PORTE &= ~(1<<drvSleep);// sleep mode after actuation
 2be:	73 98       	cbi	0x0e, 3	; 14
 2c0:	9f e3       	ldi	r25, 0x3F	; 63
 2c2:	2d e0       	ldi	r18, 0x0D	; 13
 2c4:	83 e0       	ldi	r24, 0x03	; 3
 2c6:	91 50       	subi	r25, 0x01	; 1
 2c8:	20 40       	sbci	r18, 0x00	; 0
 2ca:	80 40       	sbci	r24, 0x00	; 0
 2cc:	e1 f7       	brne	.-8      	; 0x2c6 <drvActuate+0x66>
 2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <drvActuate+0x70>
 2d0:	00 00       	nop
		_delay_ms(1000);
	}
	return 0;
}
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	08 95       	ret

000002d6 <i2c_start>:
{
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR0 & (1<<TWINT)));

    return TWDR0;
}/* i2c_readAck */
 2d6:	94 ea       	ldi	r25, 0xA4	; 164
 2d8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2dc:	ec eb       	ldi	r30, 0xBC	; 188
 2de:	f0 e0       	ldi	r31, 0x00	; 0
 2e0:	90 81       	ld	r25, Z
 2e2:	99 23       	and	r25, r25
 2e4:	ec f7       	brge	.-6      	; 0x2e0 <i2c_start+0xa>
 2e6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 2ea:	98 7f       	andi	r25, 0xF8	; 248
 2ec:	98 30       	cpi	r25, 0x08	; 8
 2ee:	11 f0       	breq	.+4      	; 0x2f4 <i2c_start+0x1e>
 2f0:	90 31       	cpi	r25, 0x10	; 16
 2f2:	a1 f4       	brne	.+40     	; 0x31c <i2c_start+0x46>
 2f4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 2f8:	84 e8       	ldi	r24, 0x84	; 132
 2fa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2fe:	ec eb       	ldi	r30, 0xBC	; 188
 300:	f0 e0       	ldi	r31, 0x00	; 0
 302:	80 81       	ld	r24, Z
 304:	88 23       	and	r24, r24
 306:	ec f7       	brge	.-6      	; 0x302 <i2c_start+0x2c>
 308:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 30c:	98 7f       	andi	r25, 0xF8	; 248
 30e:	98 31       	cpi	r25, 0x18	; 24
 310:	39 f0       	breq	.+14     	; 0x320 <i2c_start+0x4a>
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	90 34       	cpi	r25, 0x40	; 64
 316:	29 f4       	brne	.+10     	; 0x322 <i2c_start+0x4c>
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	08 95       	ret
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	08 95       	ret
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	08 95       	ret

00000324 <i2c_stop>:
 324:	84 e9       	ldi	r24, 0x94	; 148
 326:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 32a:	ec eb       	ldi	r30, 0xBC	; 188
 32c:	f0 e0       	ldi	r31, 0x00	; 0
 32e:	80 81       	ld	r24, Z
 330:	84 fd       	sbrc	r24, 4
 332:	fd cf       	rjmp	.-6      	; 0x32e <i2c_stop+0xa>
 334:	08 95       	ret

00000336 <i2c_write>:
 336:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 33a:	84 e8       	ldi	r24, 0x84	; 132
 33c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 340:	ec eb       	ldi	r30, 0xBC	; 188
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	88 23       	and	r24, r24
 348:	ec f7       	brge	.-6      	; 0x344 <i2c_write+0xe>
 34a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 34e:	98 7f       	andi	r25, 0xF8	; 248
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	98 32       	cpi	r25, 0x28	; 40
 354:	09 f4       	brne	.+2      	; 0x358 <i2c_write+0x22>
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	08 95       	ret

0000035a <i2c_readNak>:

 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN);
 35a:	84 e8       	ldi	r24, 0x84	; 132
 35c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR0 & (1<<TWINT)));
 360:	ec eb       	ldi	r30, 0xBC	; 188
 362:	f0 e0       	ldi	r31, 0x00	; 0
 364:	80 81       	ld	r24, Z
 366:	88 23       	and	r24, r24
 368:	ec f7       	brge	.-6      	; 0x364 <i2c_readNak+0xa>

    return TWDR0;
 36a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}/* i2c_readNak */
 36e:	08 95       	ret

00000370 <__vector_1>:
 370:	1f 92       	push	r1
 372:	0f 92       	push	r0
 374:	0f b6       	in	r0, 0x3f	; 63
 376:	0f 92       	push	r0
 378:	11 24       	eor	r1, r1
 37a:	2f 93       	push	r18
 37c:	3f 93       	push	r19
 37e:	4f 93       	push	r20
 380:	5f 93       	push	r21
 382:	6f 93       	push	r22
 384:	7f 93       	push	r23
 386:	8f 93       	push	r24
 388:	9f 93       	push	r25
 38a:	af 93       	push	r26
 38c:	bf 93       	push	r27
 38e:	ef 93       	push	r30
 390:	ff 93       	push	r31
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <count>
 398:	0e 94 aa 00 	call	0x154	; 0x154 <solOn>
 39c:	0e 94 6e 00 	call	0xdc	; 0xdc <apdsTransceive>
 3a0:	82 e7       	ldi	r24, 0x72	; 114
 3a2:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <i2c_start>
 3a6:	85 ee       	ldi	r24, 0xE5	; 229
 3a8:	0e 94 9b 01 	call	0x336	; 0x336 <i2c_write>
 3ac:	0e 94 92 01 	call	0x324	; 0x324 <i2c_stop>
 3b0:	ff 91       	pop	r31
 3b2:	ef 91       	pop	r30
 3b4:	bf 91       	pop	r27
 3b6:	af 91       	pop	r26
 3b8:	9f 91       	pop	r25
 3ba:	8f 91       	pop	r24
 3bc:	7f 91       	pop	r23
 3be:	6f 91       	pop	r22
 3c0:	5f 91       	pop	r21
 3c2:	4f 91       	pop	r20
 3c4:	3f 91       	pop	r19
 3c6:	2f 91       	pop	r18
 3c8:	0f 90       	pop	r0
 3ca:	0f be       	out	0x3f, r0	; 63
 3cc:	0f 90       	pop	r0
 3ce:	1f 90       	pop	r1
 3d0:	18 95       	reti

000003d2 <__vector_4>:
 3d2:	1f 92       	push	r1
 3d4:	0f 92       	push	r0
 3d6:	0f b6       	in	r0, 0x3f	; 63
 3d8:	0f 92       	push	r0
 3da:	11 24       	eor	r1, r1
 3dc:	2f 93       	push	r18
 3de:	3f 93       	push	r19
 3e0:	4f 93       	push	r20
 3e2:	5f 93       	push	r21
 3e4:	6f 93       	push	r22
 3e6:	7f 93       	push	r23
 3e8:	8f 93       	push	r24
 3ea:	9f 93       	push	r25
 3ec:	af 93       	push	r26
 3ee:	bf 93       	push	r27
 3f0:	ef 93       	push	r30
 3f2:	ff 93       	push	r31
 3f4:	32 9b       	sbis	0x06, 2	; 6
 3f6:	0e 94 cd 00 	call	0x19a	; 0x19a <batteryLow>
 3fa:	ff 91       	pop	r31
 3fc:	ef 91       	pop	r30
 3fe:	bf 91       	pop	r27
 400:	af 91       	pop	r26
 402:	9f 91       	pop	r25
 404:	8f 91       	pop	r24
 406:	7f 91       	pop	r23
 408:	6f 91       	pop	r22
 40a:	5f 91       	pop	r21
 40c:	4f 91       	pop	r20
 40e:	3f 91       	pop	r19
 410:	2f 91       	pop	r18
 412:	0f 90       	pop	r0
 414:	0f be       	out	0x3f, r0	; 63
 416:	0f 90       	pop	r0
 418:	1f 90       	pop	r1
 41a:	18 95       	reti

0000041c <__vector_3>:
 41c:	1f 92       	push	r1
 41e:	0f 92       	push	r0
 420:	0f b6       	in	r0, 0x3f	; 63
 422:	0f 92       	push	r0
 424:	11 24       	eor	r1, r1
 426:	0f 90       	pop	r0
 428:	0f be       	out	0x3f, r0	; 63
 42a:	0f 90       	pop	r0
 42c:	1f 90       	pop	r1
 42e:	18 95       	reti

00000430 <__vector_5>:
 430:	1f 92       	push	r1
 432:	0f 92       	push	r0
 434:	0f b6       	in	r0, 0x3f	; 63
 436:	0f 92       	push	r0
 438:	11 24       	eor	r1, r1
 43a:	2f 93       	push	r18
 43c:	3f 93       	push	r19
 43e:	4f 93       	push	r20
 440:	5f 93       	push	r21
 442:	6f 93       	push	r22
 444:	7f 93       	push	r23
 446:	8f 93       	push	r24
 448:	9f 93       	push	r25
 44a:	af 93       	push	r26
 44c:	bf 93       	push	r27
 44e:	ef 93       	push	r30
 450:	ff 93       	push	r31
 452:	0e 94 b7 00 	call	0x16e	; 0x16e <flashy>
 456:	ff 91       	pop	r31
 458:	ef 91       	pop	r30
 45a:	bf 91       	pop	r27
 45c:	af 91       	pop	r26
 45e:	9f 91       	pop	r25
 460:	8f 91       	pop	r24
 462:	7f 91       	pop	r23
 464:	6f 91       	pop	r22
 466:	5f 91       	pop	r21
 468:	4f 91       	pop	r20
 46a:	3f 91       	pop	r19
 46c:	2f 91       	pop	r18
 46e:	0f 90       	pop	r0
 470:	0f be       	out	0x3f, r0	; 63
 472:	0f 90       	pop	r0
 474:	1f 90       	pop	r1
 476:	18 95       	reti

00000478 <timerSetup>:
 478:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 47c:	25 e0       	ldi	r18, 0x05	; 5
 47e:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 482:	26 e0       	ldi	r18, 0x06	; 6
 484:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 488:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 48c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 490:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 494:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 498:	80 e0       	ldi	r24, 0x00	; 0
 49a:	08 95       	ret

0000049c <__vector_11>:
 49c:	1f 92       	push	r1
 49e:	0f 92       	push	r0
 4a0:	0f b6       	in	r0, 0x3f	; 63
 4a2:	0f 92       	push	r0
 4a4:	11 24       	eor	r1, r1
 4a6:	2f 93       	push	r18
 4a8:	3f 93       	push	r19
 4aa:	4f 93       	push	r20
 4ac:	5f 93       	push	r21
 4ae:	6f 93       	push	r22
 4b0:	7f 93       	push	r23
 4b2:	8f 93       	push	r24
 4b4:	9f 93       	push	r25
 4b6:	af 93       	push	r26
 4b8:	bf 93       	push	r27
 4ba:	ef 93       	push	r30
 4bc:	ff 93       	push	r31
 4be:	0e 94 cd 00 	call	0x19a	; 0x19a <batteryLow>
 4c2:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 4c6:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 4ca:	ff 91       	pop	r31
 4cc:	ef 91       	pop	r30
 4ce:	bf 91       	pop	r27
 4d0:	af 91       	pop	r26
 4d2:	9f 91       	pop	r25
 4d4:	8f 91       	pop	r24
 4d6:	7f 91       	pop	r23
 4d8:	6f 91       	pop	r22
 4da:	5f 91       	pop	r21
 4dc:	4f 91       	pop	r20
 4de:	3f 91       	pop	r19
 4e0:	2f 91       	pop	r18
 4e2:	0f 90       	pop	r0
 4e4:	0f be       	out	0x3f, r0	; 63
 4e6:	0f 90       	pop	r0
 4e8:	1f 90       	pop	r1
 4ea:	18 95       	reti

000004ec <main>:
#define F_CPU 1000000

	int num;
int main(void)
{
        portSetup();
 4ec:	0e 94 94 00 	call	0x128	; 0x128 <portSetup>
		//DDRD |= (1<<greenPort);
		//DDRD |= (1<<bluePort);
		//DDRD |= (1<<redPort); PORTD |= ((1<<greenPort) | (1<<bluePort) | (1<<redPort));
		//PORTE &= ~(1<<drvSleep);

		boostEnable();
 4f0:	0e 94 a6 00 	call	0x14c	; 0x14c <boostEnable>
		//boostDisable();

		//pcIntSetup();

		timerSetup(2000);
 4f4:	80 ed       	ldi	r24, 0xD0	; 208
 4f6:	97 e0       	ldi	r25, 0x07	; 7
 4f8:	0e 94 3c 02 	call	0x478	; 0x478 <timerSetup>
		//vcnlSetup(1);//prox enabled
		sei();
 4fc:	78 94       	sei
//PORTE |= (1<<2);
//systemNoGo();
//solOff();
//solOff();
//solOn();
drvActuate(1);
 4fe:	81 e0       	ldi	r24, 0x01	; 1
 500:	0e 94 30 01 	call	0x260	; 0x260 <drvActuate>
 504:	fc cf       	rjmp	.-8      	; 0x4fe <main+0x12>

00000506 <_exit>:
 506:	f8 94       	cli

00000508 <__stop_program>:
 508:	ff cf       	rjmp	.-2      	; 0x508 <__stop_program>
