
Nebula 0.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000058e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000051a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  0000058e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000058e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00000600  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e76  00000000  00000000  000007e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e32  00000000  00000000  0000265e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010aa  00000000  00000000  00003490  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000494  00000000  00000000  0000453c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000073b  00000000  00000000  000049d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d30  00000000  00000000  0000510b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00005e3b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 b5 01 	jmp	0x36a	; 0x36a <__vector_1>
   8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   c:	0c 94 26 02 	jmp	0x44c	; 0x44c <__vector_3>
  10:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__vector_4>
  14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  2c:	0c 94 4a 02 	jmp	0x494	; 0x494 <__vector_11>
  30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  70:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  74:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  78:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  7c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  80:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  84:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  88:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  8c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  90:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  94:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  98:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  9c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  ac:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  b0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a1 30       	cpi	r26, 0x01	; 1
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	0e 94 6e 02 	call	0x4dc	; 0x4dc <main>
  d4:	0c 94 8b 02 	jmp	0x516	; 0x516 <_exit>

000000d8 <__bad_interrupt>:
  d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <apdsSend>:
	}
	else{
		return 1;
	}

}
  dc:	cf 93       	push	r28
  de:	c6 2f       	mov	r28, r22
  e0:	0e 94 93 01 	call	0x326	; 0x326 <i2c_write>
  e4:	8c 2f       	mov	r24, r28
  e6:	0e 94 93 01 	call	0x326	; 0x326 <i2c_write>
  ea:	80 e0       	ldi	r24, 0x00	; 0
  ec:	cf 91       	pop	r28
  ee:	08 95       	ret

000000f0 <apdsTransceive>:
  f0:	cf 93       	push	r28
  f2:	82 e7       	ldi	r24, 0x72	; 114
  f4:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
  f8:	8c e9       	ldi	r24, 0x9C	; 156
  fa:	0e 94 93 01 	call	0x326	; 0x326 <i2c_write>
  fe:	83 e7       	ldi	r24, 0x73	; 115
 100:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
 104:	0e 94 a5 01 	call	0x34a	; 0x34a <i2c_readNak>
 108:	c8 2f       	mov	r28, r24
 10a:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_stop>
 10e:	c1 11       	cpse	r28, r1
 110:	03 c0       	rjmp	.+6      	; 0x118 <apdsTransceive+0x28>
 112:	0e 94 10 01 	call	0x220	; 0x220 <flashy>
 116:	02 c0       	rjmp	.+4      	; 0x11c <apdsTransceive+0x2c>
 118:	0e 94 49 01 	call	0x292	; 0x292 <i2c_check>
 11c:	80 e0       	ldi	r24, 0x00	; 0
 11e:	cf 91       	pop	r28
 120:	08 95       	ret

00000122 <proximity>:
//##########################################################################
unsigned char proximity(void)
{   i2c_start(nebula_write);
 122:	82 e7       	ldi	r24, 0x72	; 114
 124:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
	apdsSend(configTwoReg,0x01);
 128:	61 e0       	ldi	r22, 0x01	; 1
 12a:	80 e9       	ldi	r24, 0x90	; 144
 12c:	0e 94 6e 00 	call	0xdc	; 0xdc <apdsSend>
	return 0;
	
}
unsigned char apdsStop(void)
{
	i2c_stop();
 130:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_stop>
//##########################################################################
unsigned char proximity(void)
{   i2c_start(nebula_write);
	apdsSend(configTwoReg,0x01);
	apdsStop();
	i2c_start(nebula_write);
 134:	82 e7       	ldi	r24, 0x72	; 114
 136:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
	apdsSend(configThreeReg,0x00);
 13a:	60 e0       	ldi	r22, 0x00	; 0
 13c:	8f e9       	ldi	r24, 0x9F	; 159
 13e:	0e 94 6e 00 	call	0xdc	; 0xdc <apdsSend>
	return 0;
	
}
unsigned char apdsStop(void)
{
	i2c_stop();
 142:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_stop>
	apdsSend(configTwoReg,0x01);
	apdsStop();
	i2c_start(nebula_write);
	apdsSend(configThreeReg,0x00);
	apdsStop();
	i2c_start(nebula_write);
 146:	82 e7       	ldi	r24, 0x72	; 114
 148:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
	apdsSend(controlReg1,0x0C);
 14c:	6c e0       	ldi	r22, 0x0C	; 12
 14e:	8f e8       	ldi	r24, 0x8F	; 143
 150:	0e 94 6e 00 	call	0xdc	; 0xdc <apdsSend>
	return 0;
	
}
unsigned char apdsStop(void)
{
	i2c_stop();
 154:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_stop>
	apdsSend(configThreeReg,0x00);
	apdsStop();
	i2c_start(nebula_write);
	apdsSend(controlReg1,0x0C);
	apdsStop();
	i2c_start(nebula_write);
 158:	82 e7       	ldi	r24, 0x72	; 114
 15a:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
	apdsSend(persReg,0x5F);
 15e:	6f e5       	ldi	r22, 0x5F	; 95
 160:	8c e8       	ldi	r24, 0x8C	; 140
 162:	0e 94 6e 00 	call	0xdc	; 0xdc <apdsSend>
	return 0;
	
}
unsigned char apdsStop(void)
{
	i2c_stop();
 166:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_stop>
	apdsSend(controlReg1,0x0C);
	apdsStop();
	i2c_start(nebula_write);
	apdsSend(persReg,0x5F);
	apdsStop();
	i2c_start(nebula_write);
 16a:	82 e7       	ldi	r24, 0x72	; 114
 16c:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
	apdsSend(proxPulsCountReg,0x7C);
 170:	6c e7       	ldi	r22, 0x7C	; 124
 172:	8e e8       	ldi	r24, 0x8E	; 142
 174:	0e 94 6e 00 	call	0xdc	; 0xdc <apdsSend>
	return 0;
	
}
unsigned char apdsStop(void)
{
	i2c_stop();
 178:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_stop>
	apdsSend(persReg,0x5F);
	apdsStop();
	i2c_start(nebula_write);
	apdsSend(proxPulsCountReg,0x7C);
	apdsStop();
	i2c_start(nebula_write);
 17c:	82 e7       	ldi	r24, 0x72	; 114
 17e:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
	apdsSend(proxIntThresReg1,0x09);
 182:	69 e0       	ldi	r22, 0x09	; 9
 184:	89 e8       	ldi	r24, 0x89	; 137
 186:	0e 94 6e 00 	call	0xdc	; 0xdc <apdsSend>
	return 0;
	
}
unsigned char apdsStop(void)
{
	i2c_stop();
 18a:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_stop>
	apdsSend(proxPulsCountReg,0x7C);
	apdsStop();
	i2c_start(nebula_write);
	apdsSend(proxIntThresReg1,0x09);
	apdsStop();
	i2c_start(nebula_write);
 18e:	82 e7       	ldi	r24, 0x72	; 114
 190:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
	apdsSend(proxIntThresReg2,0xFE);
 194:	6e ef       	ldi	r22, 0xFE	; 254
 196:	8b e8       	ldi	r24, 0x8B	; 139
 198:	0e 94 6e 00 	call	0xdc	; 0xdc <apdsSend>
	return 0;
	
}
unsigned char apdsStop(void)
{
	i2c_stop();
 19c:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_stop>
	apdsSend(proxIntThresReg1,0x09);
	apdsStop();
	i2c_start(nebula_write);
	apdsSend(proxIntThresReg2,0xFE);
	apdsStop();
	i2c_start(nebula_write);
 1a0:	82 e7       	ldi	r24, 0x72	; 114
 1a2:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
	apdsSend(0x83,0x00);
 1a6:	60 e0       	ldi	r22, 0x00	; 0
 1a8:	83 e8       	ldi	r24, 0x83	; 131
 1aa:	0e 94 6e 00 	call	0xdc	; 0xdc <apdsSend>
	return 0;
	
}
unsigned char apdsStop(void)
{
	i2c_stop();
 1ae:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_stop>
	apdsSend(proxIntThresReg2,0xFE);
	apdsStop();
	i2c_start(nebula_write);
	apdsSend(0x83,0x00);
	apdsStop();
	i2c_start(nebula_write);
 1b2:	82 e7       	ldi	r24, 0x72	; 114
 1b4:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
	i2c_write(0xE5);
 1b8:	85 ee       	ldi	r24, 0xE5	; 229
 1ba:	0e 94 93 01 	call	0x326	; 0x326 <i2c_write>
	i2c_stop();
 1be:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_stop>
	i2c_start(nebula_write);
 1c2:	82 e7       	ldi	r24, 0x72	; 114
 1c4:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
	apdsSend(enableReg,0x25);
 1c8:	65 e2       	ldi	r22, 0x25	; 37
 1ca:	80 e8       	ldi	r24, 0x80	; 128
 1cc:	0e 94 6e 00 	call	0xdc	; 0xdc <apdsSend>
	return 0;
	
}
unsigned char apdsStop(void)
{
	i2c_stop();
 1d0:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_stop>
	//i2c_write(0xE7);
	//i2c_write(0xE4);
	//apdsStop();
	
	return 0;
}
 1d4:	80 e0       	ldi	r24, 0x00	; 0
 1d6:	08 95       	ret

000001d8 <boostEnable>:
	{
		//do task for single button press
		buttonCount += 1;
	}
	return 0;
}
 1d8:	6a 9a       	sbi	0x0d, 2	; 13
 1da:	72 9a       	sbi	0x0e, 2	; 14
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	08 95       	ret

000001e0 <comparator>:
 1e0:	29 9a       	sbi	0x05, 1	; 5
 1e2:	83 b1       	in	r24, 0x03	; 3
 1e4:	82 fb       	bst	r24, 2
 1e6:	88 27       	eor	r24, r24
 1e8:	80 f9       	bld	r24, 0
 1ea:	08 95       	ret

000001ec <solOn>:
 1ec:	73 9a       	sbi	0x0e, 3	; 14
 1ee:	41 9a       	sbi	0x08, 1	; 8
 1f0:	83 ec       	ldi	r24, 0xC3	; 195
 1f2:	99 e0       	ldi	r25, 0x09	; 9
 1f4:	01 97       	sbiw	r24, 0x01	; 1
 1f6:	f1 f7       	brne	.-4      	; 0x1f4 <solOn+0x8>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <solOn+0xe>
 1fa:	00 00       	nop
 1fc:	41 98       	cbi	0x08, 1	; 8
 1fe:	40 98       	cbi	0x08, 0	; 8
 200:	73 98       	cbi	0x0e, 3	; 14
 202:	80 e0       	ldi	r24, 0x00	; 0
 204:	08 95       	ret

00000206 <solOff>:
 206:	73 9a       	sbi	0x0e, 3	; 14
 208:	40 9a       	sbi	0x08, 0	; 8
 20a:	83 ec       	ldi	r24, 0xC3	; 195
 20c:	99 e0       	ldi	r25, 0x09	; 9
 20e:	01 97       	sbiw	r24, 0x01	; 1
 210:	f1 f7       	brne	.-4      	; 0x20e <solOff+0x8>
 212:	00 c0       	rjmp	.+0      	; 0x214 <solOff+0xe>
 214:	00 00       	nop
 216:	40 98       	cbi	0x08, 0	; 8
 218:	41 98       	cbi	0x08, 1	; 8
 21a:	73 98       	cbi	0x0e, 3	; 14
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	08 95       	ret

00000220 <flashy>:
 220:	5e 98       	cbi	0x0b, 6	; 11
 222:	83 ed       	ldi	r24, 0xD3	; 211
 224:	90 e3       	ldi	r25, 0x30	; 48
 226:	01 97       	sbiw	r24, 0x01	; 1
 228:	f1 f7       	brne	.-4      	; 0x226 <flashy+0x6>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <flashy+0xc>
 22c:	00 00       	nop
 22e:	5e 9a       	sbi	0x0b, 6	; 11
 230:	83 ed       	ldi	r24, 0xD3	; 211
 232:	90 e3       	ldi	r25, 0x30	; 48
 234:	01 97       	sbiw	r24, 0x01	; 1
 236:	f1 f7       	brne	.-4      	; 0x234 <flashy+0x14>
 238:	00 c0       	rjmp	.+0      	; 0x23a <flashy+0x1a>
 23a:	00 00       	nop
 23c:	5e 98       	cbi	0x0b, 6	; 11
 23e:	83 ed       	ldi	r24, 0xD3	; 211
 240:	90 e3       	ldi	r25, 0x30	; 48
 242:	01 97       	sbiw	r24, 0x01	; 1
 244:	f1 f7       	brne	.-4      	; 0x242 <flashy+0x22>
 246:	00 c0       	rjmp	.+0      	; 0x248 <flashy+0x28>
 248:	00 00       	nop
 24a:	5e 9a       	sbi	0x0b, 6	; 11
 24c:	83 ed       	ldi	r24, 0xD3	; 211
 24e:	90 e3       	ldi	r25, 0x30	; 48
 250:	01 97       	sbiw	r24, 0x01	; 1
 252:	f1 f7       	brne	.-4      	; 0x250 <flashy+0x30>
 254:	00 c0       	rjmp	.+0      	; 0x256 <flashy+0x36>
 256:	00 00       	nop
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	08 95       	ret

0000025c <charging>:
 25c:	cf 93       	push	r28
 25e:	df 93       	push	r29
 260:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <comparator>
 264:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 268:	18 99       	sbic	0x03, 0	; 3
 26a:	02 c0       	rjmp	.+4      	; 0x270 <charging+0x14>
 26c:	5d 98       	cbi	0x0b, 5	; 11
 26e:	0d c0       	rjmp	.+26     	; 0x28a <charging+0x2e>
 270:	93 b1       	in	r25, 0x03	; 3
 272:	91 70       	andi	r25, 0x01	; 1
 274:	c9 2f       	mov	r28, r25
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	d9 2f       	mov	r29, r25
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	8c 23       	and	r24, r28
 27e:	9d 23       	and	r25, r29
 280:	89 2b       	or	r24, r25
 282:	11 f0       	breq	.+4      	; 0x288 <charging+0x2c>
 284:	5d 9a       	sbi	0x0b, 5	; 11
 286:	01 c0       	rjmp	.+2      	; 0x28a <charging+0x2e>
 288:	5d 98       	cbi	0x0b, 5	; 11
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	08 95       	ret

00000292 <i2c_check>:

unsigned char i2c_check(void)
{
	PORTD &= ~(1<<greenPort);
 292:	5f 98       	cbi	0x0b, 7	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 294:	83 ed       	ldi	r24, 0xD3	; 211
 296:	90 e3       	ldi	r25, 0x30	; 48
 298:	01 97       	sbiw	r24, 0x01	; 1
 29a:	f1 f7       	brne	.-4      	; 0x298 <i2c_check+0x6>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <i2c_check+0xc>
 29e:	00 00       	nop
	_delay_ms(50);
	PORTD |= (1<<greenPort);
 2a0:	5f 9a       	sbi	0x0b, 7	; 11
 2a2:	83 ed       	ldi	r24, 0xD3	; 211
 2a4:	90 e3       	ldi	r25, 0x30	; 48
 2a6:	01 97       	sbiw	r24, 0x01	; 1
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <i2c_check+0x14>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <i2c_check+0x1a>
 2ac:	00 00       	nop
	_delay_ms(50);
	return 0;
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	08 95       	ret

000002b2 <i2c_init>:
{
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR0 & (1<<TWINT)));    

    return TWDR0;
}/* i2c_readAck */
 2b2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 2b6:	84 e0       	ldi	r24, 0x04	; 4
 2b8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
 2bc:	84 ea       	ldi	r24, 0xA4	; 164
 2be:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	08 95       	ret

000002c6 <i2c_start>:
 2c6:	94 ea       	ldi	r25, 0xA4	; 164
 2c8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2cc:	ec eb       	ldi	r30, 0xBC	; 188
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	90 81       	ld	r25, Z
 2d2:	99 23       	and	r25, r25
 2d4:	ec f7       	brge	.-6      	; 0x2d0 <i2c_start+0xa>
 2d6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 2da:	98 7f       	andi	r25, 0xF8	; 248
 2dc:	98 30       	cpi	r25, 0x08	; 8
 2de:	11 f0       	breq	.+4      	; 0x2e4 <i2c_start+0x1e>
 2e0:	90 31       	cpi	r25, 0x10	; 16
 2e2:	a1 f4       	brne	.+40     	; 0x30c <i2c_start+0x46>
 2e4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 2e8:	84 e8       	ldi	r24, 0x84	; 132
 2ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2ee:	ec eb       	ldi	r30, 0xBC	; 188
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
 2f2:	80 81       	ld	r24, Z
 2f4:	88 23       	and	r24, r24
 2f6:	ec f7       	brge	.-6      	; 0x2f2 <i2c_start+0x2c>
 2f8:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 2fc:	98 7f       	andi	r25, 0xF8	; 248
 2fe:	98 31       	cpi	r25, 0x18	; 24
 300:	39 f0       	breq	.+14     	; 0x310 <i2c_start+0x4a>
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	90 34       	cpi	r25, 0x40	; 64
 306:	29 f4       	brne	.+10     	; 0x312 <i2c_start+0x4c>
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	08 95       	ret
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	08 95       	ret
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	08 95       	ret

00000314 <i2c_stop>:
 314:	84 e9       	ldi	r24, 0x94	; 148
 316:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 31a:	ec eb       	ldi	r30, 0xBC	; 188
 31c:	f0 e0       	ldi	r31, 0x00	; 0
 31e:	80 81       	ld	r24, Z
 320:	84 fd       	sbrc	r24, 4
 322:	fd cf       	rjmp	.-6      	; 0x31e <i2c_stop+0xa>
 324:	08 95       	ret

00000326 <i2c_write>:
 326:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 32a:	84 e8       	ldi	r24, 0x84	; 132
 32c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 330:	ec eb       	ldi	r30, 0xBC	; 188
 332:	f0 e0       	ldi	r31, 0x00	; 0
 334:	80 81       	ld	r24, Z
 336:	88 23       	and	r24, r24
 338:	ec f7       	brge	.-6      	; 0x334 <i2c_write+0xe>
 33a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 33e:	98 7f       	andi	r25, 0xF8	; 248
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	98 32       	cpi	r25, 0x28	; 40
 344:	09 f4       	brne	.+2      	; 0x348 <i2c_write+0x22>
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	08 95       	ret

0000034a <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN);
 34a:	84 e8       	ldi	r24, 0x84	; 132
 34c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR0 & (1<<TWINT)));
 350:	ec eb       	ldi	r30, 0xBC	; 188
 352:	f0 e0       	ldi	r31, 0x00	; 0
 354:	80 81       	ld	r24, Z
 356:	88 23       	and	r24, r24
 358:	ec f7       	brge	.-6      	; 0x354 <i2c_readNak+0xa>
	
    return TWDR0;
 35a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}/* i2c_readNak */
 35e:	08 95       	ret

00000360 <int0Setup>:
	TCNT1 = 0;// sets the default value for the timer.
	OCR1A = timerValue;// sets the value for the timer delay, example the 2 minutes or few seconds.
	TIMSK1 = 0x01;// interrupt mask for timer 1A compare match
	return 0;
	
}
 360:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 364:	e8 9a       	sbi	0x1d, 0	; 29
 366:	80 e0       	ldi	r24, 0x00	; 0
 368:	08 95       	ret

0000036a <__vector_1>:
 36a:	1f 92       	push	r1
 36c:	0f 92       	push	r0
 36e:	0f b6       	in	r0, 0x3f	; 63
 370:	0f 92       	push	r0
 372:	11 24       	eor	r1, r1
 374:	2f 93       	push	r18
 376:	3f 93       	push	r19
 378:	4f 93       	push	r20
 37a:	5f 93       	push	r21
 37c:	6f 93       	push	r22
 37e:	7f 93       	push	r23
 380:	8f 93       	push	r24
 382:	9f 93       	push	r25
 384:	af 93       	push	r26
 386:	bf 93       	push	r27
 388:	ef 93       	push	r30
 38a:	ff 93       	push	r31
 38c:	0e 94 78 00 	call	0xf0	; 0xf0 <apdsTransceive>
 390:	82 e7       	ldi	r24, 0x72	; 114
 392:	0e 94 63 01 	call	0x2c6	; 0x2c6 <i2c_start>
 396:	85 ee       	ldi	r24, 0xE5	; 229
 398:	0e 94 93 01 	call	0x326	; 0x326 <i2c_write>
 39c:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_stop>
 3a0:	ff 91       	pop	r31
 3a2:	ef 91       	pop	r30
 3a4:	bf 91       	pop	r27
 3a6:	af 91       	pop	r26
 3a8:	9f 91       	pop	r25
 3aa:	8f 91       	pop	r24
 3ac:	7f 91       	pop	r23
 3ae:	6f 91       	pop	r22
 3b0:	5f 91       	pop	r21
 3b2:	4f 91       	pop	r20
 3b4:	3f 91       	pop	r19
 3b6:	2f 91       	pop	r18
 3b8:	0f 90       	pop	r0
 3ba:	0f be       	out	0x3f, r0	; 63
 3bc:	0f 90       	pop	r0
 3be:	1f 90       	pop	r1
 3c0:	18 95       	reti

000003c2 <pcIntSetup>:
 3c2:	e8 e6       	ldi	r30, 0x68	; 104
 3c4:	f0 e0       	ldi	r31, 0x00	; 0
 3c6:	80 81       	ld	r24, Z
 3c8:	83 60       	ori	r24, 0x03	; 3
 3ca:	80 83       	st	Z, r24
 3cc:	ec e6       	ldi	r30, 0x6C	; 108
 3ce:	f0 e0       	ldi	r31, 0x00	; 0
 3d0:	80 81       	ld	r24, Z
 3d2:	85 60       	ori	r24, 0x05	; 5
 3d4:	80 83       	st	Z, r24
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	08 95       	ret

000003da <__vector_4>:
 3da:	1f 92       	push	r1
 3dc:	0f 92       	push	r0
 3de:	0f b6       	in	r0, 0x3f	; 63
 3e0:	0f 92       	push	r0
 3e2:	11 24       	eor	r1, r1
 3e4:	2f 93       	push	r18
 3e6:	3f 93       	push	r19
 3e8:	4f 93       	push	r20
 3ea:	5f 93       	push	r21
 3ec:	6f 93       	push	r22
 3ee:	7f 93       	push	r23
 3f0:	8f 93       	push	r24
 3f2:	9f 93       	push	r25
 3f4:	af 93       	push	r26
 3f6:	bf 93       	push	r27
 3f8:	ef 93       	push	r30
 3fa:	ff 93       	push	r31
 3fc:	32 99       	sbic	0x06, 2	; 6
 3fe:	15 c0       	rjmp	.+42     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 400:	0e 94 f6 00 	call	0x1ec	; 0x1ec <solOn>
 404:	2f e9       	ldi	r18, 0x9F	; 159
 406:	86 e8       	ldi	r24, 0x86	; 134
 408:	91 e0       	ldi	r25, 0x01	; 1
 40a:	21 50       	subi	r18, 0x01	; 1
 40c:	80 40       	sbci	r24, 0x00	; 0
 40e:	90 40       	sbci	r25, 0x00	; 0
 410:	e1 f7       	brne	.-8      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 412:	00 c0       	rjmp	.+0      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 414:	00 00       	nop
 416:	0e 94 03 01 	call	0x206	; 0x206 <solOff>
 41a:	87 e8       	ldi	r24, 0x87	; 135
 41c:	93 e1       	ldi	r25, 0x13	; 19
 41e:	01 97       	sbiw	r24, 0x01	; 1
 420:	f1 f7       	brne	.-4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 422:	00 c0       	rjmp	.+0      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 424:	00 00       	nop
 426:	0e 94 10 01 	call	0x220	; 0x220 <flashy>
 42a:	ff 91       	pop	r31
 42c:	ef 91       	pop	r30
 42e:	bf 91       	pop	r27
 430:	af 91       	pop	r26
 432:	9f 91       	pop	r25
 434:	8f 91       	pop	r24
 436:	7f 91       	pop	r23
 438:	6f 91       	pop	r22
 43a:	5f 91       	pop	r21
 43c:	4f 91       	pop	r20
 43e:	3f 91       	pop	r19
 440:	2f 91       	pop	r18
 442:	0f 90       	pop	r0
 444:	0f be       	out	0x3f, r0	; 63
 446:	0f 90       	pop	r0
 448:	1f 90       	pop	r1
 44a:	18 95       	reti

0000044c <__vector_3>:
 44c:	1f 92       	push	r1
 44e:	0f 92       	push	r0
 450:	0f b6       	in	r0, 0x3f	; 63
 452:	0f 92       	push	r0
 454:	11 24       	eor	r1, r1
 456:	2f 93       	push	r18
 458:	3f 93       	push	r19
 45a:	4f 93       	push	r20
 45c:	5f 93       	push	r21
 45e:	6f 93       	push	r22
 460:	7f 93       	push	r23
 462:	8f 93       	push	r24
 464:	9f 93       	push	r25
 466:	af 93       	push	r26
 468:	bf 93       	push	r27
 46a:	ef 93       	push	r30
 46c:	ff 93       	push	r31
 46e:	0e 94 2e 01 	call	0x25c	; 0x25c <charging>
 472:	ff 91       	pop	r31
 474:	ef 91       	pop	r30
 476:	bf 91       	pop	r27
 478:	af 91       	pop	r26
 47a:	9f 91       	pop	r25
 47c:	8f 91       	pop	r24
 47e:	7f 91       	pop	r23
 480:	6f 91       	pop	r22
 482:	5f 91       	pop	r21
 484:	4f 91       	pop	r20
 486:	3f 91       	pop	r19
 488:	2f 91       	pop	r18
 48a:	0f 90       	pop	r0
 48c:	0f be       	out	0x3f, r0	; 63
 48e:	0f 90       	pop	r0
 490:	1f 90       	pop	r1
 492:	18 95       	reti

00000494 <__vector_11>:

ISR(TIMER1_COMPA_vect)// Interrupt service routine  for timer
{
 494:	1f 92       	push	r1
 496:	0f 92       	push	r0
 498:	0f b6       	in	r0, 0x3f	; 63
 49a:	0f 92       	push	r0
 49c:	11 24       	eor	r1, r1
 49e:	2f 93       	push	r18
 4a0:	3f 93       	push	r19
 4a2:	4f 93       	push	r20
 4a4:	5f 93       	push	r21
 4a6:	6f 93       	push	r22
 4a8:	7f 93       	push	r23
 4aa:	8f 93       	push	r24
 4ac:	9f 93       	push	r25
 4ae:	af 93       	push	r26
 4b0:	bf 93       	push	r27
 4b2:	ef 93       	push	r30
 4b4:	ff 93       	push	r31
	solOff();
 4b6:	0e 94 03 01 	call	0x206	; 0x206 <solOff>
}
 4ba:	ff 91       	pop	r31
 4bc:	ef 91       	pop	r30
 4be:	bf 91       	pop	r27
 4c0:	af 91       	pop	r26
 4c2:	9f 91       	pop	r25
 4c4:	8f 91       	pop	r24
 4c6:	7f 91       	pop	r23
 4c8:	6f 91       	pop	r22
 4ca:	5f 91       	pop	r21
 4cc:	4f 91       	pop	r20
 4ce:	3f 91       	pop	r19
 4d0:	2f 91       	pop	r18
 4d2:	0f 90       	pop	r0
 4d4:	0f be       	out	0x3f, r0	; 63
 4d6:	0f 90       	pop	r0
 4d8:	1f 90       	pop	r1
 4da:	18 95       	reti

000004dc <main>:
		vcnlBegin(vcnl_write);
		num = vcnlTransceive();
		*/
		/*DDRD = (1<<6);
		DDRD |= (1<<redPort);*/
		DDRD |= (1<<greenPort);
 4dc:	57 9a       	sbi	0x0a, 7	; 10
		DDRD |=(1<<redPort);
 4de:	55 9a       	sbi	0x0a, 5	; 10
		DDRD |=(1<<bluePort);
 4e0:	56 9a       	sbi	0x0a, 6	; 10
		DDRE |=(1<<drvSleep);
 4e2:	6b 9a       	sbi	0x0d, 3	; 13
		DDRC &= ~(1<<2);
 4e4:	3a 98       	cbi	0x07, 2	; 7
		PORTC |=(1<<2);
 4e6:	42 9a       	sbi	0x08, 2	; 8
		DDRB &= ~(1<<0);
 4e8:	20 98       	cbi	0x04, 0	; 4
		PORTB |= (1<<0);
 4ea:	28 9a       	sbi	0x05, 0	; 5
		
		PORTD |= (1<<greenPort);
 4ec:	5f 9a       	sbi	0x0b, 7	; 11
		PORTD |= (1<<bluePort);
 4ee:	5e 9a       	sbi	0x0b, 6	; 11
		PORTD |= (1<<redPort);
 4f0:	5d 9a       	sbi	0x0b, 5	; 11
		//PORTE &= ~(1<<drvSleep);

		DDRC |= (1<<drvIn1);
 4f2:	38 9a       	sbi	0x07, 0	; 7
		DDRC |= (1<<drvIn2);
 4f4:	39 9a       	sbi	0x07, 1	; 7
		PORTC &= ~(1<<drvIn1);
 4f6:	40 98       	cbi	0x08, 0	; 8
		PORTC &= ~(1<<drvIn2);
 4f8:	41 98       	cbi	0x08, 1	; 8
		//PORTE |= (1<<drvSleep);
		
		
		boostEnable();
 4fa:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <boostEnable>
		//boostDisable();
		pcIntSetup();
 4fe:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <pcIntSetup>
		int0Setup();
 502:	0e 94 b0 01 	call	0x360	; 0x360 <int0Setup>
		
				
		
		//solOn();
		//solOff();
		DDRD &= ~(1<<2);
 506:	52 98       	cbi	0x0a, 2	; 10
		PORTD |= (1<<2);
 508:	5a 9a       	sbi	0x0b, 2	; 11
		//apdsInit();
		i2c_init();
 50a:	0e 94 59 01 	call	0x2b2	; 0x2b2 <i2c_init>
		//apdsBegin(nebula_write);
		proximity();
 50e:	0e 94 91 00 	call	0x122	; 0x122 <proximity>
		//solOn();
		//_delay_ms(5000);
		//solOff();
		//_delay_ms(5000);
		//proximity();
		sei();
 512:	78 94       	sei
 514:	ff cf       	rjmp	.-2      	; 0x514 <main+0x38>

00000516 <_exit>:
 516:	f8 94       	cli

00000518 <__stop_program>:
 518:	ff cf       	rjmp	.-2      	; 0x518 <__stop_program>
